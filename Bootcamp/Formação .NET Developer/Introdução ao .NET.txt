1-Introdução ao .NET, História versões, Usos
2-Diferenças entre .NET Framework (Legado) e .NET
3-Compilador do .NET e seu funcionamento 
4-Configuração do Ambiente e IDEs
5-Sintaxe e Identação
6-Tipos de dados 
7-Operadores de Atribuição 
8-Operadores condicionais(IF,else,switch,case)
9-Operadores lógicos
10-Operadores Aritméticos e a classe Math
11-Estruturas de Repetição
12-Estrutura de um programa e método principal 
13-Array e Listas 
14-Comentários e boas práticas 


1-Introdução ao .NET 

Plataforma de desenvolvimento Open Source Unificado 
.NET - A unified platform 


C# linguagem de programação 

-DESKTOP  
WPF 
WINDOWS FORM 
UWP 

-WEB 
ASP.NET 

-CLOUD 
AZURE 

-MOBILE
XAMARIM 

-GAMING 
UNITY 

-IOT (INTERNET OF THINGS)
ARM32
ARM64

-AI
ML.NET
.NET for 
APACHE SPARK 

.NET STANDART
.NET 

-INFRASTRUCTURE 
RUNTIME COMPONENTS 
COMPILERS 
LANGUAGES  C#, F#, VISUAL BASIC  



 TOOLS 
VISUAL STUDIO 
VISUAL STUDIO CODE
COMMAND LINE INTERFACE 


.NET 
TIMELINE 



-COMPILADOR 
ALTO NÍVEL LINGUAGEM LEGÍVEL PARA PROGRAMADORES 
BAIXO NÍVEL LINGUAGEM DE MÁQUINA POUCA ABSTRAÇÃO

Compilador:Programa que realizar a conversão 
de linguagem de alto nível para baixo nível. C#,java

Transpilador:É a conversão de uma linguagem ou 
implementação para outra. Sua saída permanece em 
linguagem de alto nível ex:Typescript para Javascript 

Linguagem compilada - C# Java Lê do código binário

Linguagem interpretada - Lê e interpreta direto do
código fonte. Javascript , PHP 



10-Operadores Aritméticos e a classe Math
operadores 
calculadora 

potência Classe Math.Pow (Double)
funções trigonométricas SENO COSSENO TANGENTE
incremento, decremento 
raiz quadrada 



11-Estruturas de Repetição
Tabuada 

laços de repetições FOR WHILE DO WHILE 

-FOR

int numero = 5;
for (int contador = 0; contador<=10;contador++)
{
 Console.WriteLine($"{numero}x{contador}={numero*contador}");

}

-WHILE 

int numero = 5;
int contador = 0;


while(contador <= 10; contador<=10;contador++)
{
 Console.WriteLine($"{contador+1}º Execução: {numero} x {contador} = {numero * contador"}");
 contador++;
}


INTERROMPENDO FLUXO DE REPETIÇÃO - break;

while(contador <= 10; contador<=10;contador++)
{
 Console.WriteLine($"{contador+1}º Execução: {numero} x {contador} = {numero * contador"}");
 contador++;

if (contador ==6)
  {
    break;
  }
}

-DO WHILE

int soma = 0, numero = 0; 

do 

{
	Console.WriteLine("Digite um número (0 para parar");
	numero = Convert.ToInt32(Console.ReadLine());

	soma += numero;
	

}while(numero !=0);


	Console.WriteLine($"Total da soma dos números digitados é: {soma}");



Console.ReadLine  Debug não funciona no terminal do VSCode
launch.json


alterar "console":"internalConsole",   para "console":"integratedTerminal", 


-MENU INTERATIVO 

 string opcao;

while(true)
{
	Console.Clear();
	Console.WriteLine("Digite a sua opção:");
	Console.WriteLine("1 - Cadastrar cliente");
	Console.WriteLine("2 - Buscar cliente");
	Console.WriteLine("3 - Apagar cliente");
	Console.WriteLine("4 - Encerrar");

	opcao = Console.ReadLine();

	switch(opcao)
	{
	 	case"1":
		    Console.WriteLine("Cadastro de cliente");
			 break;
      case"2":
		    Console.WriteLine("Busca de cliente");
			 break;
      case"3":
		    Console.WriteLine("Apagar cliente");
			 break;
      case"4":
		    Console.WriteLine("Encerrar");
			 Environment.Exit(0);
			 break;

		default:
			 Console.WriteLine("Opção inválida");
			 break;
	
	}
}

Refatorando 


 string opcao;
 bool exibirMenu = true;

while(exibirMenu)
{
	Console.Clear();
	Console.WriteLine("Digite a sua opção:");
	Console.WriteLine("1 - Cadastrar cliente");
	Console.WriteLine("2 - Buscar cliente");
	Console.WriteLine("3 - Apagar cliente");
	Console.WriteLine("4 - Encerrar");

	opcao = Console.ReadLine();

	switch(opcao)
	{
	 	case"1":
		    Console.WriteLine("Cadastro de cliente");
			 break;
      case"2":
		    Console.WriteLine("Busca de cliente");
			 break;
      case"3":
		    Console.WriteLine("Apagar cliente");
			 break;
      case"4":
		    Console.WriteLine("Encerrar");
			 exibirMenu = false;
			 break;

		default:
			 Console.WriteLine("Opção inválida");
			 break;
	
	}
}


Console.WriteLine("O programa encerrou!!");




*Estrutura de um projeto .NET 

.csproj (build,debug,versão)

.sln Agrupamento de projetos 



Classe Auxiliar comum a 2 outras classes ex: ContaCorrente


Backup - Novo Projeto e refatoração

extensão - vscode-solution-explorer 

Solução (Agrupamento de projetos)


Método Principal - Main
Criando projetos com versões .NET 5 (Main) 
e .NET6 (Implícito) 


*Array e listas 





14-Comentários e boas práticas 

//única linha 
/*Várias linhas*/ 


<summary> documentar classes métodos,parâmetros ...
























